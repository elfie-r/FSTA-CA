@model Sample.Models.FormAssignLeader

@{
    ViewBag.Title = "Assign Tour Leader";
}

<h2>Assign Tour Leader</h2>

<p>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        <div class="form-horizontal">

            <br />
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.selectedTourId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.selectedTourId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.selectedTourId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Display Available Leaders" class="btn btn-default" />
                    <p> </p>
                    <div style="color:#bb0000">@ViewData["ErrorMessage"]</div>
                </div>
            </div>
        </div>
    }
</p>

<table class="table">
    <tr>
        <th>
            
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TourLeader.TourLeaderId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TourLeader.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TourLeader.ContactNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TourLeader.EmailAddress)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TourLeader.Rank)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TourLeader.Availability)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model.LeaderList) {
    <tr>
        <td>
            <input name="radio" id="radio" onclick="getLeaderId(this.value)" type="radio" value="@item.TourLeaderId" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TourLeaderId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ContactNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EmailAddress)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Rank)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Availability)
        </td>
       
    </tr>
}

</table>

<p>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        <div class="form-horizontal">

            <br />
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.selectedLeaderId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    
                    @Html.TextBoxFor(model => model.selectedLeaderId, new { @class = "form-control", @readonly = "readonly" })

                    @Html.ValidationMessageFor(model => model.selectedLeaderId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Assign Leader" class="btn btn-default" />
                </div>
            </div>

            <div>

            </div>
        </div>
    }
</p>
<script type="text/javascript">
    function getLeaderId(leaderid) {
        document.getElementById("selectedLeaderId").value = leaderid;
    }
</script>